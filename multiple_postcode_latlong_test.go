package main

import (
	"encoding/json"
	"github.com/beemi/postcode-io-tests-golang/internal/config"
	"github.com/beemi/postcode-io-tests-golang/models"
	"github.com/stretchr/testify/assert"
	"io"
	"log"
	"net/http"
	"strings"
	"testing"
)

func TestBulkPostCodeLatLong(t *testing.T) {
	baseUrl := config.PostCodeIOEndPoint() + "/postcodes"
	method := "POST"

	// form request body
	payload := strings.NewReader(`{
		"postcodes": [
			"RM17 6EY",
			"IG1 2FJ"
		]}
	`)

	client := &http.Client{}
	req, err := http.NewRequest(method, baseUrl, payload)
	req.Header.Add("Content-Type", "application/json")

	//assert ensure no error
	assert.NoError(t, err)

	resp, err := client.Do(req)
	assert.NoError(t, err)
	log.Printf("Response Status: %s", resp.Status)
	log.Printf("Response Headers: %s", resp.Header)
	// print response body in JSON format
	body, err := io.ReadAll(resp.Body)
	log.Printf("Response Body: \n %s", string(body))

	assert.NoError(t, err)
	assert.Equal(t, 200, resp.StatusCode, "Get bulk Postcode lat long Api failed")

	// convert body to json
	var responseBody models.AutoGenerated
	err = json.Unmarshal(body, &responseBody)
	assert.NoError(t, err)
	assert.Equal(t, 200, responseBody.Status, "Get bulk Postcode lat long Api failed")
	assert.Equal(t, 2, len(responseBody.Result), "Get bulk Postcode.result lat long Api failed")
}
